# swagger_petstore_open_api30
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require 'date'
module SwaggerPetstoreOpenApi30
  # Order Model.
  class Order < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :id

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :pet_id

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :quantity

    # TODO: Write general description for this method
    # @return [DateTime]
    attr_accessor :ship_date

    # Order Status
    # @return [OrderStatusEnum]
    attr_accessor :order_status

    # Order Status
    # @return [TrueClass|FalseClass]
    attr_accessor :complete

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'id'
      @_hash['pet_id'] = 'petId'
      @_hash['quantity'] = 'quantity'
      @_hash['ship_date'] = 'shipDate'
      @_hash['order_status'] = 'orderStatus'
      @_hash['complete'] = 'complete'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        id
        pet_id
        quantity
        ship_date
        order_status
        complete
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(id = SKIP,
                   pet_id = SKIP,
                   quantity = SKIP,
                   ship_date = SKIP,
                   order_status = OrderStatusEnum::APPROVED,
                   complete = SKIP)
      @id = id unless id == SKIP
      @pet_id = pet_id unless pet_id == SKIP
      @quantity = quantity unless quantity == SKIP
      @ship_date = ship_date unless ship_date == SKIP
      @order_status = order_status unless order_status == SKIP
      @complete = complete unless complete == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      id = hash.key?('id') ? hash['id'] : SKIP
      pet_id = hash.key?('petId') ? hash['petId'] : SKIP
      quantity = hash.key?('quantity') ? hash['quantity'] : SKIP
      ship_date = if hash.key?('shipDate')
                    (DateTimeHelper.from_rfc3339(hash['shipDate']) if hash['shipDate'])
                  else
                    SKIP
                  end
      order_status = hash['orderStatus'] ||= OrderStatusEnum::APPROVED
      complete = hash.key?('complete') ? hash['complete'] : SKIP

      # Create object from extracted values.
      Order.new(id,
                pet_id,
                quantity,
                ship_date,
                order_status,
                complete)
    end

    def to_ship_date
      DateTimeHelper.to_rfc3339(ship_date)
    end
  end
end
