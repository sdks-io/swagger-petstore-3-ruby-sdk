# swagger_petstore_open_api30
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module SwaggerPetstoreOpenApi30
  # User Model.
  class User < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :username

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :first_name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :last_name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :email

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :password

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :phone

    # User Status
    # @return [Integer]
    attr_accessor :user_status

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'id'
      @_hash['username'] = 'username'
      @_hash['first_name'] = 'firstName'
      @_hash['last_name'] = 'lastName'
      @_hash['email'] = 'email'
      @_hash['password'] = 'password'
      @_hash['phone'] = 'phone'
      @_hash['user_status'] = 'userStatus'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        id
        username
        first_name
        last_name
        email
        password
        phone
        user_status
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(id = SKIP,
                   username = SKIP,
                   first_name = SKIP,
                   last_name = SKIP,
                   email = SKIP,
                   password = SKIP,
                   phone = SKIP,
                   user_status = SKIP)
      @id = id unless id == SKIP
      @username = username unless username == SKIP
      @first_name = first_name unless first_name == SKIP
      @last_name = last_name unless last_name == SKIP
      @email = email unless email == SKIP
      @password = password unless password == SKIP
      @phone = phone unless phone == SKIP
      @user_status = user_status unless user_status == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      id = hash.key?('id') ? hash['id'] : SKIP
      username = hash.key?('username') ? hash['username'] : SKIP
      first_name = hash.key?('firstName') ? hash['firstName'] : SKIP
      last_name = hash.key?('lastName') ? hash['lastName'] : SKIP
      email = hash.key?('email') ? hash['email'] : SKIP
      password = hash.key?('password') ? hash['password'] : SKIP
      phone = hash.key?('phone') ? hash['phone'] : SKIP
      user_status = hash.key?('userStatus') ? hash['userStatus'] : SKIP

      # Create object from extracted values.
      User.new(id,
               username,
               first_name,
               last_name,
               email,
               password,
               phone,
               user_status)
    end
  end
end
